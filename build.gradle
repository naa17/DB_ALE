plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    id 'application'
    id 'war'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}
version '1.0-SNAPSHOT'

dependencies {
    runtimeOnly group: 'postgresql', name: 'postgresql', version: '9.1-901-1.jdbc4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.testfx:testfx-core:4.0.12-alpha"
    testCompile "org.testfx:testfx-junit:4.0.12-alpha"
    compile group: 'javax.mail', name: 'javax.mail-api', version: '1.5.3'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.5.3'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.7'
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compile group: 'org.openjfx', name: 'javafx-controls', version: '11', classifier: 'linux'
    compile group: 'org.openjfx', name: 'javafx-base', version: '11', classifier: 'linux'
    compile group: 'org.openjfx', name: 'javafx-graphics', version: '11', classifier: 'linux'
}

repositories {
    mavenCentral()
    jcenter()
}

application {
    // Define the main class for the application
    mainClassName = 'DB_ALE.Main'
}
war {
    from {
        // all of the library jar files used are to be zipped into the war file
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

